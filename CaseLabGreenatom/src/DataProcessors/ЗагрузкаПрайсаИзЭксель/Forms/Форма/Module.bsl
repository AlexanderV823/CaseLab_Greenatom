#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не РольДоступна("ПолныеПрава") Тогда
		
		Элементы.Согласовано.Видимость = Ложь;
		Элементы.Согласовано.Доступность = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПутьКФайлуНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	ВыбратьФайлАсинх();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Загрузить(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ЗагрузитьФайл();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСерверебезКонтекста
Процедура СоздатьДокументИНовыеПозицииНоменклатуры (Контрагент, АдресФайла, Согласовано) 
	
	Данные = ПолучитьИзВременногоХранилища(АдресФайла);
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("xlsx");
	Данные.Записать(ИмяВременногоФайла);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Прочитать(ИмяВременногоФайла);
	
	ДокументЦены = Документы.УстановкаЦен.СоздатьДокумент();
	ДокументЦены.Дата = ТекущаяДата();
	ДокументЦены.Согласовано = Согласовано;
	ДокументЦены.Контрагент = Контрагент;  
	ДокументЦены.Ответственный = ТекущийСотрудникСервер.СотрудникТекущегоПользователя();
	ДокументЦены.Комментарий = "Загружено из файла";
	
	ШаблонСообщения = НСтр("ru = 'Позиции: %1 нет в справочнике Номенклатура. Создана новая позиция номенклатуры. Проверьте заполнение!'");
	
	ОписаниеТипаЧисло = Новый ОписаниеТипов("Число");
	
	Для СтрокаПрайса = 2 По ТабличныйДокумент.ВысотаТаблицы Цикл
		
		ИмяНоменклатуры = ТабличныйДокумент.Область(СтрокаПрайса, 1).Текст; 
		ИмяНоменклатуры = УдалитьНенужныеСимволы(ИмяНоменклатуры);

		Цена = СтрЗаменить(ТабличныйДокумент.Область(СтрокаПрайса, 2).Текст, "-", ","); //ОписаниеТипаЧисло.ПривестиЗначение заменяет "." на ","
		СтавкаНДС = СтрЗаменить(СокрЛП(ТабличныйДокумент.Область(СтрокаПрайса, 3).Текст), "%", "");
		
		Ставка = ОписаниеТипаЧисло.ПривестиЗначение(СтавкаНДС);
				
		Если Ставка = 20 Тогда
			
			НДС = Перечисления.СтавкиНДС.НДС20;
			СтавкаНДС = 20; // Используется для вычисления суммы НДС "сверху"
			
		ИначеЕсли Ставка = 10 Тогда
			
			НДС = Перечисления.СтавкиНДС.НДС10;
			СтавкаНДС = 10;
			
		ИначеЕсли Не ЗначениеЗаполнено(Ставка) Тогда
			
			НДС = Перечисления.СтавкиНДС.БезНДС;
			СтавкаНДС = 0;
			
		КонецЕсли;
		
						
		НоменклатураВСправочнике = Справочники.Номенклатура.НайтиПоНаименованию(ИмяНоменклатуры);
		
		НоваяСтрокаТабличнойЧасти = ДокументЦены.Цены.Добавить();
		
		Если Не ЗначениеЗаполнено(НоменклатураВСправочнике) Тогда 
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = СтрШаблон(ШаблонСообщения, ИмяНоменклатуры);
			Сообщение.Сообщить();
			
			НоваяПозицияНоменклатуры = Справочники.Номенклатура.СоздатьЭлемент();
			НоваяПозицияНоменклатуры.Наименование = ИмяНоменклатуры;
			НоваяПозицияНоменклатуры.СтавкаНДС = НДС;
			НоваяПозицияНоменклатуры.Записать();
			
			НоваяСтрокаТабличнойЧасти.Номенклатура = НоваяПозицияНоменклатуры.Ссылка;
			
		Иначе 
			
			НоваяСтрокаТабличнойЧасти.Номенклатура = НоменклатураВСправочнике;
			
		КонецЕсли;					
		
		СуммаНДС = Окр(ОписаниеТипаЧисло.ПривестиЗначение(Цена) * СтавкаНДС / 100, 2);

		НоваяСтрокаТабличнойЧасти.ЦенаБезНДС = ОписаниеТипаЧисло.ПривестиЗначение(Цена);
		НоваяСтрокаТабличнойЧасти.СтавкаНДС = НДС;
		НоваяСтрокаТабличнойЧасти.ЦенаСНДС = ОписаниеТипаЧисло.ПривестиЗначение(Цена) + СуммаНДС;
		НоваяСтрокаТабличнойЧасти.СуммаНДС = СуммаНДС;
	    		
	КонецЦикла;
	
	Если Не Согласовано Тогда
		
		ДокументЦены.Записать(РежимЗаписиДокумента.Запись);
		
	Иначе 
		
		ДокументЦены.Записать(РежимЗаписиДокумента.Проведение);
		
	КонецЕсли;
	
	УдалитьФайлы(ИмяВременногоФайла);
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура ВыбратьФайлАсинх()
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок = "Выберите файл для загрузки цен";
	Диалог.МножественныйВыбор = Ложь;
	Диалог.Фильтр = "Exel-файлы|*.xls;*.xlsx";
	
	РезультатВыбора = Ждать Диалог.ВыбратьАсинх();
	
	Если РезультатВыбора = Неопределено Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Объект.ПутьКФайлу = РезультатВыбора[0];
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура ЗагрузитьФайл()
	
	ОписаниеФайла = Ждать ПоместитьФайлНаСерверАсинх( , , , Объект.ПутьКФайлу, УникальныйИдентификатор);
	
	СписокЗначений = Новый СписокЗначений;
	СписокЗначений.Добавить(1, "Загрузить цены только существующей номенклатуры");
	СписокЗначений.Добавить(2, "Создать новые позиции номенклатуры и загрузить цены");
	СписокЗначений.Добавить(3, "Отказаться от загрузки прайс-листа");
	
	ТекстВопроса = "Как загрузить прайс-лист?:";
	ОтветПользователя = Ждать ВопросАсинх(ТекстВопроса, СписокЗначений, , 1, "Подтвердите действие");
	
	Если ОтветПользователя = 1 Тогда
		
		Сообщить("Цены поставщика загружены, без создания новых позиций."); //Здесь и далее сообщения созданы для контроля выполнения ветки
		СоздатьДокумент(Объект.Контрагент, ОписаниеФайла.Адрес, Согласовано);
		
	ИначеЕсли ОтветПользователя = 2 Тогда
		
		СоздатьДокументИНовыеПозицииНоменклатуры(Объект.Контрагент, ОписаниеФайла.Адрес, Согласовано);
		Сообщить("Цены поставщика загружены. Созданы новые позиции номенклатуры. Проверьте заполнение всех полей!"); 
		
	ИначеЕсли ОтветПользователя = 3 Тогда
		
		Сообщить("Вы отказались от загрузки цен.");
		Возврат;
		
	КонецЕсли;
	
КонецПроцедуры 

&НаСерверебезКонтекста
Процедура СоздатьДокумент(Контрагент, АдресФайла, Согласовано)
	
	Данные = ПолучитьИзВременногоХранилища(АдресФайла);
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("xlsx");
	Данные.Записать(ИмяВременногоФайла);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Прочитать(ИмяВременногоФайла);
	
	ДокументЦены = Документы.УстановкаЦен.СоздатьДокумент();
	ДокументЦены.Дата = ТекущаяДата();
	ДокументЦены.Согласовано = Согласовано;
	ДокументЦены.Контрагент = Контрагент; 
	ДокументЦены.Ответственный = ПараметрыСеанса.СотрудникТекущегоПользователя;
	ДокументЦены.Комментарий = "Загружено из файла";
	
	ШаблонСообщения = НСтр("ru = 'Позиции: %1 нет в справочнике Номенклатура.'");
	
	ОписаниеТипаЧисло = Новый ОписаниеТипов("Число");
	
	Для СтрокаПрайса = 2 По ТабличныйДокумент.ВысотаТаблицы Цикл
		
		ИмяНоменклатуры = ТабличныйДокумент.Область(СтрокаПрайса, 1).Текст; 
		ИмяНоменклатуры = УдалитьНенужныеСимволы(ИмяНоменклатуры);
		
		Цена = СтрЗаменить(ТабличныйДокумент.Область(СтрокаПрайса, 2).Текст, "-", ","); //ОписаниеТипаЧисло.ПривестиЗначение заменяет "." на ","
		СтавкаНДС = СтрЗаменить(СокрЛП(ТабличныйДокумент.Область(СтрокаПрайса, 3).Текст), "%", "");
		
		Ставка = ОписаниеТипаЧисло.ПривестиЗначение(СтавкаНДС);
				
		Если Ставка = 20 Тогда
			
			НДС = Перечисления.СтавкиНДС.НДС20;
			СтавкаНДС = 20; // Используется для вычисления суммы НДС "сверху"
			
		ИначеЕсли Ставка = 10 Тогда
			
			НДС = Перечисления.СтавкиНДС.НДС10;
			СтавкаНДС = 10;
			
		ИначеЕсли Не ЗначениеЗаполнено(Ставка) Тогда
			
			НДС = Перечисления.СтавкиНДС.БезНДС;
			СтавкаНДС = 0;
			
		КонецЕсли;
						
		НоменклатураВСправочнике = Справочники.Номенклатура.НайтиПоНаименованию(ИмяНоменклатуры);
		
		Если Не ЗначениеЗаполнено(НоменклатураВСправочнике) Тогда 
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = СтрШаблон(ШаблонСообщения, ИмяНоменклатуры);
			Сообщение.Сообщить();
			
			Продолжить;
			
		КонецЕсли;
		
		СуммаНДС = Окр(ОписаниеТипаЧисло.ПривестиЗначение(Цена) * СтавкаНДС / 100, 2);
		
		НоваяСтрокаТабличнойЧасти = ДокументЦены.Цены.Добавить();
		НоваяСтрокаТабличнойЧасти.Номенклатура = НоменклатураВСправочнике;
		НоваяСтрокаТабличнойЧасти.ЦенаБезНДС = ОписаниеТипаЧисло.ПривестиЗначение(Цена);
		НоваяСтрокаТабличнойЧасти.СтавкаНДС = НДС;
		НоваяСтрокаТабличнойЧасти.ЦенаСНДС = ОписаниеТипаЧисло.ПривестиЗначение(Цена) + СуммаНДС;
		НоваяСтрокаТабличнойЧасти.СуммаНДС = СуммаНДС; 
		
	КонецЦикла;
	
	Если Не Согласовано Тогда
		
		ДокументЦены.Записать(РежимЗаписиДокумента.Запись);
		
	Иначе 
		
		ДокументЦены.Записать(РежимЗаписиДокумента.Проведение);
		
	КонецЕсли;
	
	УдалитьФайлы(ИмяВременногоФайла);
	
КонецПроцедуры

&НаСерверебезКонтекста
Функция  УдалитьНенужныеСимволы(Строка)
	
	Строка = СтрЗаменить(Строка, Символы.ПС, "");
	Строка = СтрЗаменить(Строка, Символы.ВК, " ");
	Строка = СтрЗаменить(Строка, Символы.Таб, "");
	Строка = СтрЗаменить(Строка, Символы.НПП, " ");
	Строка = СтрЗаменить(Строка, Символы.ПФ, "");
	Строка = СтрЗаменить(Строка, Символы.ВТаб, "");
	Строка = СтрЗаменить(Строка, Символ(182), ""); 
	
	Для КодСимвола = 0 По 31 Цикл
		
		Строка = СтрЗаменить(Строка, Символ(КодСимвола), "");
		
	КонецЦикла;
	
	Строка = СокрЛП(Строка);
	
	Возврат Строка
	
КонецФункции

#КонецОбласти