#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.ЗаказВЗале = Истина Тогда
		
		Элементы.АдресДоставки.Видимость = Ложь;
		Элементы.КурьерскаяСлужба.Видимость = Ложь;
		Элементы.ДатаДоставки.Видимость = Ложь;
		Элементы.КонтактныйТелефон.Видимость = Ложь;
		Элементы.Самовывоз.Видимость = Ложь;
		
		//УдалитьВсеДоставки();
		//УдалитьВсеНаборы();
		
	ИначеЕсли Объект.ЗаказВЗале = Ложь Тогда
		
		Элементы.АдресДоставки.Видимость = Истина;
		Элементы.КурьерскаяСлужба.Видимость = Истина;
		Элементы.ДатаДоставки.Видимость = Истина;
		Элементы.Самовывоз.Видимость = Истина;
		Элементы.КонтактныйТелефон.Видимость = Истина;
		
		//ДобавитьНаборДляДоставки();
				
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	Если Объект.Самовывоз = Истина Тогда
		
		Элементы.КурьерскаяСлужба.Доступность = Ложь;
					
	ИначеЕсли Объект.Самовывоз = Ложь Тогда
		
		Элементы.КурьерскаяСлужба.Доступность = Истина;
		
	КонецЕсли;
	
	Если Объект.ЗаказВЗале = Истина Тогда
		
		Элементы.АдресДоставки.Видимость = Ложь;
		Элементы.КурьерскаяСлужба.Видимость = Ложь;
		Элементы.ДатаДоставки.Видимость = Ложь;
		Элементы.КонтактныйТелефон.Видимость = Ложь;
		Элементы.Самовывоз.Видимость = Ложь;
		
		УдалитьВсеДоставки();
		
	ИначеЕсли Объект.ЗаказВЗале = Ложь Тогда
		
		Элементы.АдресДоставки.Видимость = Истина;
		Элементы.КурьерскаяСлужба.Видимость = Истина;
		Элементы.ДатаДоставки.Видимость = Истина;
		Элементы.Самовывоз.Видимость = Истина;
		Элементы.КонтактныйТелефон.Видимость = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КурьерскаяСлужбаПриИзменении(Элемент)

	ПриИзмененииКурьерскаяСлужбы(Объект.КурьерскаяСлужба);

КонецПроцедуры

&НаКлиенте
Процедура СамовывозПриИзменении(Элемент)
	
	Если Объект.Самовывоз = Истина Тогда
		
		Элементы.КурьерскаяСлужба.Доступность = Ложь;
				
		Элементы.ДатаДоставки.Заголовок = "Дата самовывоза";
      	
	ИначеЕсли Объект.Самовывоз = Ложь Тогда
		
		Элементы.КурьерскаяСлужба.Доступность = Истина; 
		Элементы.ДатаДоставки.Заголовок = "Дата доставки";
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказВЗалеПриИзменении(Элемент)
	
	Если Объект.ЗаказВЗале = Истина Тогда
		
		Элементы.АдресДоставки.Видимость = Ложь;
		Элементы.КурьерскаяСлужба.Видимость = Ложь;
		Элементы.ДатаДоставки.Видимость = Ложь;
		Элементы.КонтактныйТелефон.Видимость = Ложь;
		Элементы.Самовывоз.Видимость = Ложь;
		
		УдалитьВсеДоставки();
		УдалитьВсеНаборы();
		
	ИначеЕсли Объект.ЗаказВЗале = Ложь Тогда
		
		Элементы.АдресДоставки.Видимость = Истина;
		Элементы.КурьерскаяСлужба.Видимость = Истина;
		Элементы.ДатаДоставки.Видимость = Истина;
		Элементы.Самовывоз.Видимость = Истина;
		Элементы.КонтактныйТелефон.Видимость = Истина;
		
		ДобавитьНаборДляДоставки();
				
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДатаДоставкиПриИзменении(Элемент)
	
	Объект.ДатаДоставки = Объект.ДатаДоставки + 1800 + 3600; //Прибавляется 15 часа на готовку и даставку блюда. Хотя можно вести учет времени приготовления через Регистр
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПозиции

&НаКлиенте
Процедура ПозицииНоменклатураПриИзменении(Элемент)
	
	ПриИзмененииНоменклатуры(Элементы.Позиции.ТекущиеДанные);

КонецПроцедуры

&НаКлиенте
Процедура ПозицииКоличествоПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Позиции.ТекущиеДанные;
	
	ПриИзмененииКоличества(Элементы.Позиции.ТекущиеДанные);
	
	Если ТекущаяСтрока.Количество > 0 Тогда
		
		ТекущаяСтрока.Цена = ТекущаяСтрока.Сумма / ТекущаяСтрока.Количество;
		
	Иначе
		
		ТекущаяСтрока.Цена = 0;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПозицииЦенаПриИзменении(Элемент)
	
	ПриИзмененииЦены(Элементы.Позиции.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ПозицииСуммаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Позиции.ТекущиеДанные;
	
	ПриИзмененииСуммы(ТекущаяСтрока);
	
	Если ТекущаяСтрока.Количество > 0 Тогда
		
		ТекущаяСтрока.Цена = ТекущаяСтрока.Сумма / ТекущаяСтрока.Количество;
		
	Иначе
		
		ТекущаяСтрока.Цена = 0;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПозицииСтавкаНДСПриИзменении(Элемент)
	
	ПриИзмененииСтавкиНДС(Элементы.Позиции.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ПозицииСкидкаПриИзменении(Элемент)
	
	ПриВводеСкидки(Элементы.Позиции.ТекущиеДанные);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПриИзмененииНоменклатуры(ИзмененнаяСтрока)

    Если ЗначениеЗаполнено(ИзмененнаяСтрока.Номенклатура) Тогда
		
		Цена = ЦеныВызовСервера.ЦенаНаДату(ИзмененнаяСтрока.Номенклатура, КонецДня(Объект.Дата));
		ИзмененнаяСтрока.Цена = Цена;
				  	
		Номенклатура = ИзмененнаяСтрока.Номенклатура;		
		СтавкаНДС = СтавкаНДС(Номенклатура);
        ИзмененнаяСтрока.СтавкаНДС = СтавкаНДС;
		
	Иначе
				
		Возврат;
		
	КонецЕсли;
	
	ПриИзмененииЦены(ИзмененнаяСтрока);
	ПриИзмененииСтавкиНДС(ИзмененнаяСтрока);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СтавкаНДС(Номенклатура)

	Запрос = Новый Запрос;
	Запрос.Текст = 
					"ВЫБРАТЬ
					|	Номенклатура.СтавкаНДС КАК СтавкаНДС
					|ИЗ
					|	Справочник.Номенклатура КАК Номенклатура
					|ГДЕ
					|	Номенклатура.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Номенклатура);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Возврат ВыборкаДетальныеЗаписи.СтавкаНДС;
		
	КонецЦикла;
	
КонецФункции

&НаКлиенте
Процедура ПриИзмененииКоличества(ИзмененнаяСтрока)
	
	Если Не ЗначениеЗаполнено(ИзмененнаяСтрока.Цена) Тогда 
		
		Возврат;
		
	КонецЕсли;
	
	ПересчетКоличестваИСуммы(ИзмененнаяСтрока);
	ПриИзмененииСуммы(ИзмененнаяСтрока);
	
КонецПроцедуры 

&НаКлиенте
Процедура ПриИзмененииЦены(ИзмененнаяСтрока)
	
	ПересчетКоличестваИСуммы(ИзмененнаяСтрока);
	ПриИзмененииСуммы(ИзмененнаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчетКоличестваИСуммы(ИзмененнаяСтрока)
	
	Если ИзмененнаяСтрока = Неопределено Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ИзмененнаяСтрока.Сумма = ИзмененнаяСтрока.Количество * ИзмененнаяСтрока.Цена;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииСуммы(ИзмененнаяСтрока)
	
	Если ИзмененнаяСтрока = Неопределено Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ИзмененнаяСтрока.Количество) Или Не ЗначениеЗаполнено(ИзмененнаяСтрока.Цена) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ИзмененнаяСтрока.СуммаНДС = НДСКлиент.СуммаНДСПоСтавке(ИзмененнаяСтрока.Сумма, ИзмененнаяСтрока.СтавкаНДС);
	ИзмененнаяСтрока.СуммаСНДС = ИзмененнаяСтрока.Сумма + ИзмененнаяСтрока.СуммаНДС;
		
КонецПроцедуры 

&НаКлиенте
Процедура ПриИзмененииСтавкиНДС(ИзмененнаяСтрока)
	
	Если Не ЗначениеЗаполнено(ИзмененнаяСтрока.Сумма) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ИзмененнаяСтрока.СуммаНДС = НДСКлиент.СуммаНДСПоСтавке(ИзмененнаяСтрока.Сумма, ИзмененнаяСтрока.СтавкаНДС);
	ИзмененнаяСтрока.СуммаСНДС = ИзмененнаяСтрока.Сумма + ИзмененнаяСтрока.СуммаНДС;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииКурьерскаяСлужбы(Контрагент)
	
	Структура = ЦеныВызовСервера.ПоследняяЦенаКурьера(Контрагент, КонецДня(Объект.Дата));
	
	Если Не ЗначениеЗаполнено(Структура) Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Для данной куриерской службы не загружены цены. Доставка не может быть добавлена.";
		Сообщение.Поле = "Объект.КурьерскаяСлужба";
		Сообщение.Сообщить();
		
		Возврат;
		
	КонецЕсли;
	
	УдалитьВсеДоставки();
    
	НоваяСтрокаТабличнойЧасти = Объект.Позиции.Добавить();
	НоваяСтрокаТабличнойЧасти.Номенклатура = Структура.Номенклатура;
	НоваяСтрокаТабличнойЧасти.Количество = 1;
	НоваяСтрокаТабличнойЧасти.Цена = Структура.Цена;
	НоваяСтрокаТабличнойЧасти.СтавкаНДС = Структура.СтавкаНДС;
		
	ПриИзмененииЦены(НоваяСтрокаТабличнойЧасти);
	ПриИзмененииСтавкиНДС(НоваяСтрокаТабличнойЧасти);
	ПриВводеСкидки(НоваяСтрокаТабличнойЧасти);

КонецПроцедуры

&НаСервере
Процедура УдалитьВсеДоставки()
	
	Номенклатура = Справочники.Номенклатура.НайтиПоНаименованию("Доставка", Истина);
	ТабличнаяЧасть = Объект.Позиции;
		
	Для Каждого Строка Из ТабличнаяЧасть Цикл  //Удаляем все предыдущие строки Доставки
		
		Если Строка.Номенклатура = Номенклатура Тогда
			
			ТабличнаяЧасть.Удалить(Строка);
			
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ПриВводеСкидки(ИзмененнаяСтрока)
	
	Если ИзмененнаяСтрока.Скидка = 0 Тогда
		
		ПересчетКоличестваИСуммы(ИзмененнаяСтрока);
		ИзмененнаяСтрока.СуммаНДС = НДСКлиент.СуммаНДСПоСтавке(ИзмененнаяСтрока.Сумма, ИзмененнаяСтрока.СтавкаНДС);
		ИзмененнаяСтрока.СуммаСНДС = ИзмененнаяСтрока.Сумма + ИзмененнаяСтрока.СуммаНДС;
		
		ИзмененнаяСтрока.ВведеннаяСкидка = ИзмененнаяСтрока.Скидка;
				
	КонецЕсли;
	
	Если ИзмененнаяСтрока.ВведеннаяСкидка <> ИзмененнаяСтрока.Скидка Тогда
		
		ПересчетКоличестваИСуммы(ИзмененнаяСтрока);
		
		ИзмененнаяСтрока.Сумма = ИзмененнаяСтрока.Сумма - (ИзмененнаяСтрока.Сумма / 100) * ИзмененнаяСтрока.Скидка;
		ИзмененнаяСтрока.СуммаНДС = НДСКлиент.СуммаНДСПоСтавке(ИзмененнаяСтрока.Сумма, ИзмененнаяСтрока.СтавкаНДС);
		ИзмененнаяСтрока.СуммаСНДС = ИзмененнаяСтрока.Сумма + ИзмененнаяСтрока.СуммаНДС;
		
		ИзмененнаяСтрока.ВведеннаяСкидка = ИзмененнаяСтрока.Скидка;
		
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ДобавитьНаборДляДоставки()
	
	Номенклатура = Справочники.Номенклатура.НайтиПоНаименованию("Набор для доставки", Истина);
		
	НоваяСтрокаТабличнойЧасти = Объект.Позиции.Добавить();
	НоваяСтрокаТабличнойЧасти.Номенклатура = Номенклатура;
	НоваяСтрокаТабличнойЧасти.Количество = 1;
	НоваяСтрокаТабличнойЧасти.Цена = 1; //Включаем в доставку набор по минимальной цене
	НоваяСтрокаТабличнойЧасти.СтавкаНДС = Номенклатура.СтавкаНДС;
	
	НоваяСтрокаТабличнойЧасти.Сумма = НоваяСтрокаТабличнойЧасти.Количество * НоваяСтрокаТабличнойЧасти.Цена;
	
	НоваяСтрокаТабличнойЧасти.СуммаНДС = НДССервер.СуммаНДСПоСтавке(НоваяСтрокаТабличнойЧасти.Сумма, НоваяСтрокаТабличнойЧасти.СтавкаНДС);
	НоваяСтрокаТабличнойЧасти.СуммаСНДС = НоваяСтрокаТабличнойЧасти.Сумма + НоваяСтрокаТабличнойЧасти.СуммаНДС;
	
КонецПроцедуры 

&НаСервере
Процедура УдалитьВсеНаборы()
	
	Номенклатура = Справочники.Номенклатура.НайтиПоНаименованию("Набор для доставки", Истина);
	ТабличнаяЧасть = Объект.Позиции;
		
	Для Каждого Строка Из ТабличнаяЧасть Цикл  //Удаляем все предыдущие строки Набор для доставки
		
		Если Строка.Номенклатура = Номенклатура Тогда
			
			ТабличнаяЧасть.Удалить(Строка);
			
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти