#Область ОбработчикиСобытий

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	
	Префикс = "РТУ";
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = ТекущийСотрудникСервер.СотрудникТекущегоПользователя();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеТоваров") Тогда
		
		Контрагент = ДанныеЗаполнения.Контрагент;
		
		Для Каждого ТекСтрокаПозиции Из ДанныеЗаполнения.Позиции Цикл
			
			НоваяСтрока = Позиции.Добавить();
			НоваяСтрока.Количество = ТекСтрокаПозиции.Количество;
			НоваяСтрока.Номенклатура = ТекСтрокаПозиции.Номенклатура;
			НоваяСтрока.СтавкаНДС = ТекСтрокаПозиции.СтавкаНДС;
			НоваяСтрока.Сумма = ТекСтрокаПозиции.Сумма;
			НоваяСтрока.СуммаНДС = ТекСтрокаПозиции.СуммаНДС;
			НоваяСтрока.Цена = ТекСтрокаПозиции.Цена;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Сумма = Позиции.Итог("СуммаСНДС");
	
	Если ЗаказВЗале = Истина Тогда
		
		АдресДоставки = Неопределено;
		КурьерскаяСлужба = Неопределено;
		ДатаДоставки = Неопределено;
		КонтактныйТелефон = Неопределено; 
		Самовывоз = Ложь;
		
	КонецЕсли; 
	
	Если Самовывоз = Истина Тогда
		
		КурьерскаяСлужба = Неопределено;
		
	КонецЕсли;
 
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
		Движения.ОстаткиТоваров.Очистить();
		Движения.Продажи.Очистить();
		Движения.Доставки.Очистить();
		
		Движения.ОстаткиТоваров.Записать();
		
		Движения.ОстаткиТоваров.Записывать = Истина;
		Движения.Продажи.Записывать = Истина;
		Движения.Доставки.Записывать = Истина;
		
		ТипГотовыйПродукт = Перечисления.ТипНоменклатуры.Блюдо;
		ТипИнгредиент = Перечисления.ТипНоменклатуры.Продукт;
		ТипРасходныйМатериал = Перечисления.ТипНоменклатуры.РасходныйМатериал;
		ТипУслуга = Перечисления.ТипНоменклатуры.Услуга;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		
		"ВЫБРАТЬ
		|	РеализацияТоваровПозиции.Номенклатура КАК Номенклатура,
		|	РеализацияТоваровПозиции.Номенклатура.Тип КАК НоменклатураТипНоменклатуры,
		|	СУММА(РеализацияТоваровПозиции.Количество) КАК Количество,
		|	СУММА(РеализацияТоваровПозиции.СуммаСНДС) КАК Сумма,
		|	РеализацияТоваровПозиции.НомерСтроки КАК НомерСтроки,
		|	РеализацияТоваровПозиции.Цена КАК Цена,
		|	РеализацияТоваровПозиции.СтавкаНДС КАК СтавкаНДС
		|ПОМЕСТИТЬ ВременнаяТаблицаРеализацииТоваров
		|ИЗ
		|	Документ.РеализацияТоваров.Позиции КАК РеализацияТоваровПозиции
		|ГДЕ
		|	РеализацияТоваровПозиции.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	РеализацияТоваровПозиции.Номенклатура,
		|	РеализацияТоваровПозиции.Номенклатура.Тип,
		|	РеализацияТоваровПозиции.НомерСтроки,
		|	РеализацияТоваровПозиции.Цена,
		|	РеализацияТоваровПозиции.СтавкаНДС
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ОстаткиТоваровОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
		|	ЕСТЬNULL(ОстаткиТоваровОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
		|	ВременнаяТаблицаРеализацииТоваров.Количество КАК Количество,
		|	ВременнаяТаблицаРеализацииТоваров.НоменклатураТипНоменклатуры КАК НоменклатураТипНоменклатуры,
		|	ВременнаяТаблицаРеализацииТоваров.Номенклатура КАК Номенклатура,
		|	ОстаткиТоваровОстатки.Склад КАК Склад,
		|	ВременнаяТаблицаРеализацииТоваров.Сумма КАК Сумма,
		|	ВременнаяТаблицаРеализацииТоваров.НомерСтроки КАК НомерСтроки,
		|	ВременнаяТаблицаРеализацииТоваров.Цена КАК Цена,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаРеализацииТоваров.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
		|			ТОГДА 20
		|		КОГДА ВременнаяТаблицаРеализацииТоваров.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
		|			ТОГДА 10
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СтавкаНДС,
		|	ВременнаяТаблицаРеализацииТоваров.Номенклатура.Ингредиенты.(
		|		Продукт КАК Продукт,
		|		Количество КАК Количество
		|	) КАК Ингредиенты
		|ИЗ
		|	ВременнаяТаблицаРеализацииТоваров КАК ВременнаяТаблицаРеализацииТоваров
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиТоваров.Остатки(
		|				&Дата,
		|				Номенклатура В
		|					(ВЫБРАТЬ
		|						ВременнаяТаблицаРеализацииТоваров.Номенклатура КАК Номенклатура
		|					ИЗ
		|						ВременнаяТаблицаРеализацииТоваров КАК ВременнаяТаблицаРеализацииТоваров)) КАК ОстаткиТоваровОстатки
		|		ПО ВременнаяТаблицаРеализацииТоваров.Номенклатура = ОстаткиТоваровОстатки.Номенклатура";
		
		Запрос.УстановитьПараметр("Дата", Дата);
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Если Не ВыборкаДетальныеЗаписи.НоменклатураТипНоменклатуры = ТипУслуга И Не ВыборкаДетальныеЗаписи.НоменклатураТипНоменклатуры = ТипГотовыйПродукт Тогда 
				
				НедостатокТовара = ВыборкаДетальныеЗаписи.Количество - ВыборкаДетальныеЗаписи.КоличествоОстаток;
				
				Если НедостатокТовара > 0 Тогда
					
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = СтрШаблон("Остаток товара %1 меньше требуемого. Не хватает: %2", ВыборкаДетальныеЗаписи.Номенклатура, НедостатокТовара);
					Сообщение.Поле = "Позиции[ВыборкаДетальныеЗаписи.НомерСтроки].Количество";
					Сообщение.УстановитьДанные(ЭтотОбъект);
					Сообщение.Сообщить();
					
					Отказ = Истина;
					
					Продолжить;
					
				КонецЕсли;
								
				Если ВыборкаДетальныеЗаписи.КоличествоОстаток = ВыборкаДетальныеЗаписи.Количество Тогда //Определяем сколько списать. Списываем последние копейки, если списываем последнее количество.
					
					СуммаРасхода = ВыборкаДетальныеЗаписи.СуммаОстаток; 
					
				Иначе
					
					СуммаРасхода = ВыборкаДетальныеЗаписи.Сумма; 
					
				КонецЕсли;
				
				//Проверим наличие страхового запаса
				
				СтраховойЗапас = ВыборкаДетальныеЗаписи.СтраховойЗапас; //Берем размер страхового запаса конкретной номенклатуры из Регистра
				
				Если  ВыборкаДетальныеЗаписи.КоличествоОстаток <= СтраховойЗапас Тогда
					
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = СтрШаблон("Позиции номенклатуры %1 осталось менее страхового запаса", ВыборкаДетальныеЗаписи.Номенклатура);
					Сообщение.Поле = "Позиции[ВыборкаДетальныеЗаписи.НомерСтроки].Номенклатура";
					Сообщение.УстановитьДанные(ЭтотОбъект);
					Сообщение.Сообщить();
					
				КонецЕсли;
				
			КонецЕсли;
							
			Если ВыборкаДетальныеЗаписи.НоменклатураТипНоменклатуры = ТипГотовыйПродукт  Тогда
								
				СписокИнгредиентовТаблицаЗначений = ВыборкаДетальныеЗаписи.Ингредиенты.Выгрузить();
				СписокИнгредиентовТаблицаЗначений.Свернуть("Продукт", "Количество");
								
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ
				               |	РегистрСтраховойЗапас.Номенклатура КАК Номенклатура,
				               |	ЕСТЬNULL(ОстаткиТоваровОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
				               |	ЕСТЬNULL(ОстаткиТоваровОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
				               |	ЕСТЬNULL(РегистрСтраховойЗапас.СтраховойЗапас, 0) КАК СтраховойЗапас,
				               |	ОстаткиТоваровОстатки.Склад КАК Склад
				               |ИЗ
				               |	РегистрСведений.СтраховойЗапас КАК РегистрСтраховойЗапас
				               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиТоваров.Остатки(&Дата, ) КАК ОстаткиТоваровОстатки
				               |		ПО (ОстаткиТоваровОстатки.Номенклатура = РегистрСтраховойЗапас.Номенклатура)
				               |ГДЕ
				               |	РегистрСтраховойЗапас.Номенклатура В(&СписокИнгредиентов)";
				
				Запрос.УстановитьПараметр("Дата", Дата);
				Запрос.УстановитьПараметр("СписокИнгредиентов", СписокИнгредиентовТаблицаЗначений);
				
				РезультатЗапроса = Запрос.Выполнить();
				
				ВыборкаДетальныеЗаписиИнгредиенты = РезультатЗапроса.Выбрать();
				
				СебестоимостьБлюда = 0;
				
				Пока ВыборкаДетальныеЗаписиИнгредиенты.Следующий() Цикл
															
					ТекущийИнгредиент = СписокИнгредиентовТаблицаЗначений.Найти(ВыборкаДетальныеЗаписиИнгредиенты.Номенклатура, "Продукт"); 
					
					СтраховойЗапас = ВыборкаДетальныеЗаписиИнгредиенты.СтраховойЗапас; //Берем размер страхового запаса конкретной номенклатуры из Регистра
															
					НедостатокИнгредиентов = ТекущийИнгредиент.Количество * ВыборкаДетальныеЗаписи.Количество - ВыборкаДетальныеЗаписиИнгредиенты.КоличествоОстаток;
					
					Если НедостатокИнгредиентов > 0 Тогда
						
						Сообщение = Новый СообщениеПользователю;
						Сообщение.Текст = СтрШаблон("Остаток товара %1 меньше требуемого. Не хватает: %2", ВыборкаДетальныеЗаписиИнгредиенты.Номенклатура, НедостатокИнгредиентов);
						Сообщение.Поле = "Позиции[ВыборкаДетальныеЗаписи.НомерСтроки].Количество";
						Сообщение.УстановитьДанные(ЭтотОбъект);
						Сообщение.Сообщить();
						
						Отказ = Истина;
						
						Продолжить;
						
					КонецЕсли;
								
					Если ВыборкаДетальныеЗаписиИнгредиенты.КоличествоОстаток = ТекущийИнгредиент.Количество * ВыборкаДетальныеЗаписи.Количество Тогда 
						
						СуммаРасходаИнгредиента = ВыборкаДетальныеЗаписиИнгредиенты.СуммаОстаток;
						
						Сообщение = Новый СообщениеПользователю;
						Сообщение.Текст = СтрШаблон("Списан последний остаток позиции %1. Срочно проверьте своевременность поступления!", ВыборкаДетальныеЗаписиИнгредиенты.Номенклатура);
						Сообщение.Поле = "Позиции[ВыборкаДетальныеЗаписи.НомерСтроки].Номенклатура";
						Сообщение.УстановитьДанные(ЭтотОбъект);
						Сообщение.Сообщить();
						
					Иначе
						
						СуммаРасходаИнгредиента = Окр(ТекущийИнгредиент.Количество * (ВыборкаДетальныеЗаписиИнгредиенты.СуммаОстаток / ВыборкаДетальныеЗаписиИнгредиенты.КоличествоОстаток), 2); 
						
					КонецЕсли;
					
					//Запись движения по Регистру накопления Остатки Товаров для ингредиентов
					
					Движение = Движения.ОстаткиТоваров.Добавить();
					Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
					Движение.Период = Дата;
					Движение.Номенклатура = ВыборкаДетальныеЗаписиИнгредиенты.Номенклатура;
					Движение.Количество = ТекущийИнгредиент.Количество * ВыборкаДетальныеЗаписи.Количество;
					Движение.Сумма = СуммаРасходаИнгредиента;
					Движение.Склад = ВыборкаДетальныеЗаписиИнгредиенты.Склад;
					
					СебестоимостьБлюда = СебестоимостьБлюда + Окр((ВыборкаДетальныеЗаписиИнгредиенты.СуммаОстаток / ВыборкаДетальныеЗаписиИнгредиенты.КоличествоОстаток) * (ТекущийИнгредиент.Количество * ВыборкаДетальныеЗаписи.Количество), 2);
					
					Если  ВыборкаДетальныеЗаписиИнгредиенты.КоличествоОстаток < СтраховойЗапас Тогда
						
						Сообщение = Новый СообщениеПользователю;
						Сообщение.Текст = СтрШаблон("Позиции номенклатуры %1 осталось менее страхового запаса", ВыборкаДетальныеЗаписиИнгредиенты.Номенклатура);
						Сообщение.УстановитьДанные(ЭтотОбъект);
						Сообщение.Сообщить();
						
					КонецЕсли;
                				
				КонецЦикла;
				
			ИначеЕсли Не ВыборкаДетальныеЗаписи.НоменклатураТипНоменклатуры = ТипУслуга Тогда
				
				//Запись движения по Регистру накопления Остатки Товаров
				
				Движение = Движения.ОстаткиТоваров.Добавить();
				Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
				Движение.Период = Дата;
				Движение.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
				Движение.Количество = ВыборкаДетальныеЗаписи.Количество;
				Движение.Сумма = СуммаРасхода;
				Движение.Склад = ВыборкаДетальныеЗаписи.Склад;
				
			КонецЕсли;
			
			//Запись движения по Регистру накопления Продажи
			
			Движение = Движения.Продажи.Добавить();
			Движение.Период = Дата;
			Движение.Контрагент = Контрагент;
			Движение.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
			Движение.Количество = ВыборкаДетальныеЗаписи.Количество;
			Движение.Сумма = ВыборкаДетальныеЗаписи.Сумма;
			
			Если Не ВыборкаДетальныеЗаписи.НоменклатураТипНоменклатуры = ТипГотовыйПродукт И ВыборкаДетальныеЗаписи.НоменклатураТипНоменклатуры <> ТипУслуга Тогда
				
				Движение.Себестоимость = (ВыборкаДетальныеЗаписи.СуммаОстаток / ВыборкаДетальныеЗаписи.КоличествоОстаток) * ВыборкаДетальныеЗаписи.Количество;
				
			ИначеЕсли ВыборкаДетальныеЗаписи.НоменклатураТипНоменклатуры = ТипГотовыйПродукт Тогда
				
				Движение.Себестоимость =  СебестоимостьБлюда;
				
			ИначеЕсли ВыборкаДетальныеЗаписи.НоменклатураТипНоменклатуры = ТипУслуга Тогда	
				
				Движение.Себестоимость = ВыборкаДетальныеЗаписи.Цена; //Пока курьеры на УСН считается корректно. В дальнейшем нужно умножать на ставку НДС конкретного курьера.
				
			КонецЕсли;
			
			Движение.Ответственный = Ответственный;
			
			Если ВыборкаДетальныеЗаписи.НоменклатураТипНоменклатуры = ТипУслуга Тогда
				
				//Запись движения по Регистру накопления Доставки
				
				Движение = Движения.Доставки.Добавить();
				Движение.Период = Дата;
				Движение.Контрагент = КурьерскаяСлужба;
				Движение.Количество = ВыборкаДетальныеЗаписи.Количество;
				Движение.Сумма = ВыборкаДетальныеЗаписи.Цена + (ВыборкаДетальныеЗаписи.Цена * ВыборкаДетальныеЗаписи.СтавкаНДС / 100);
				Движение.Ответственный = Ответственный; 
								
			КонецЕсли;
			
		КонецЦикла; 
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	//Проверка заполнения Курьера или Самовывоза
	
	Если Не ЗаказВЗале И Не Самовывоз И Не ЗначениеЗаполнено(КурьерскаяСлужба) Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Заказ не в зале. Укажите либо курьерскую службу, либо самовывоз.";
		Сообщение.Сообщить();
		
		Отказ = Истина; 
		
	КонецЕсли;	
	
	//Проверка выбора контрагента с типом Курьер
	
	Если Не КурьерскаяСлужба.ЭтоКурьер И Не Самовывоз И Не ЗаказВЗале Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Выберите контрагента с типом Курьер";
		Сообщение.Поле = "КурьерскаяСлужба";
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Сообщить();
		
		Отказ = Истина; 
		
	КонецЕсли;
	
	//Проверка указания контактного телефона
	
	Если Не ЗаказВЗале И Не ЗначениеЗаполнено(КонтактныйТелефон) Тогда
			
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Укажите контактный телефон";
		Сообщение.Поле = "КонтактныйТелефон";
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Сообщить();
		
		Отказ = Истина; 
		
	КонецЕсли;
	
	//Проверка указания даты доставки
	
	Если Не ЗаказВЗале И Не ЗначениеЗаполнено(ДатаДоставки) Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Укажите дату и время доставки";
		Сообщение.Поле = "ДатаДоставки";
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Сообщить();
		
		Отказ = Истина; 
		
	КонецЕсли;
	
	//Проверка указания адреса доставки
	
	Если ЗначениеЗаполнено(КурьерскаяСлужба) И Не ЗначениеЗаполнено(АдресДоставки) Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Укажите адрес доставки";
		Сообщение.Поле = "АдресДоставки";
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Сообщить();
		
		Отказ = Истина; 
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
